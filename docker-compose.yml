name: query-sandbox

services:
  api:
    container_name: query-sandbox-api
    build:
      context: .
      dockerfile: ./docker/api.Dockerfile
    ports:
      - '8080:8080'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    network_mode: host
    depends_on:
      - postgres
    restart: unless-stopped

  metrics:
    container_name: query-sandbox-metrics
    build:
      context: .
      dockerfile: ./docker/metrics.Dockerfile
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    network_mode: host
    depends_on:
      - postgres
      - api
    restart: unless-stopped

  postgres:
    container_name: query-sandbox-postgres
    image: postgres:14.9
    ports:
      - '5432:5432'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - postgres_data:/var/lib/postgresql
      - ./postgres/init-postgres.sh:/docker-entrypoint-initdb.d/init.sh:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    network_mode: host
    restart: unless-stopped

volumes:
  postgres_data:
